@implements IAsyncDisposable

<div id="page-transition" class="@Active">
    <div id="page-transition-inner">
        <span>Working...</span>
        <div class="@Active" id="prograss-bar"></div>
    </div>
</div>

@code {
    [Inject] TransitionPageService TransitionPageService { get; set; }
    [Inject] IJSRuntime JSRuntime { get; set; }

    IJSObjectReference ComponentModule;

    string Active { get; set; } = "";

    protected async override Task OnInitializedAsync()
    {
        ComponentModule = await JSRuntime.InvokeAsync<IJSObjectReference>("import",
            $"./js/modules/pageTransitionModule.js");

        TransitionPageService.Transition += OnTransitionHandler;
    }

    async void OnTransitionHandler(bool state)
    {
        await InvokeAsync(async () =>
       {
           Active = state == false ? "" : "active";
           StateHasChanged();

           await Animate(state);
       });
    }

    async Task Animate(bool state)
    {
        await ComponentModule.InvokeVoidAsync("Animate", state);
    }

    public async ValueTask DisposeAsync()
    {
        if (ComponentModule != null)
        {
            await ComponentModule.DisposeAsync();
        }

        TransitionPageService.Transition -= OnTransitionHandler;
    }
}