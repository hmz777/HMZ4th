@using BlogApp.Services
@using BlogApp.Models
@using System.Timers
@implements IDisposable

<div class="notification-container @Status @NotificationMessageModel.NotificationType.ToString()">
    <i class="notification-icon las la @Icon la-2x"></i>
    <p class="notification-message">@((MarkupString)NotificationMessageModel.NotificationMessage)</p>
</div>

@code {
    [Parameter] public string NotificationId { get; set; }
    [Parameter] public NotificationMessageModel NotificationMessageModel { get; set; }
    [Parameter] public EventCallback<string> NotificationFinishedCallback { get; set; }

    string Status;
    string Icon;
    Timer Timer;

    protected override void OnParametersSet()
    {
        SetIcon();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            Show();
        }
    }

    void Show()
    {
        Status = "active";
        StateHasChanged();

        StartTimer();
    }

    void Hide()
    {
        Status = "";
        StateHasChanged();
    }

    void StartTimer()
    {
        Timer = new Timer()
            {
                Interval = 5400
            };

        Timer.Elapsed += async (obj, args) =>
        {
            Hide();
            Timer.Enabled = false;
            Timer.Dispose();

            //Inform the container that this notification should be removed becuase it's over
            await NotificationFinishedCallback.InvokeAsync(NotificationId);
        };

        Timer.Enabled = true;
    }

    void SetIcon()
    {
        switch (NotificationMessageModel.NotificationType)
        {
            case NotificationType.Error:
                Icon = "la-times-circle";
                break;
            case NotificationType.Success:
                Icon = "la-check-circle";
                break;
            case NotificationType.Information:
                Icon = "la-info-circle";
                break;
            case NotificationType.Warning:
                Icon = "la-exclamation-circle";
                break;
            default:
                Icon = "la-times-circle";
                break;
        }
    }

    public void Dispose()
    {
        Timer?.Dispose();
    }
}