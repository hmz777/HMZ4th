@inherits LayoutComponentBase
@implements IDisposable

<div class="page @ToggleState">
    <Sidebar />
    <main>
        <article class="content-block">
            @Body
        </article>
    </main>
    <NotificationContainer />
    <PageTransition />

    <button class="sidebar-toggle @ToggleState" @onclick="ToggleSidebar" type="button">
        <div class="sandwich-btn">
            <div class="sandwich-inner"></div>
        </div>
    </button>
</div>

@code {
    [Inject] IJSRuntime JSRuntime { get; set; }
    public IJSObjectReference SidebarModule { get; set; }
    DotNetObjectReference<MainLayout>? compRef;

    string ToggleState = "";

    protected async override Task OnInitializedAsync()
    {
        SidebarModule = await JSRuntime.InvokeAsync<IJSObjectReference>("import",
            $"./js/modules/sidebarModule.js");
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender && SidebarModule != null)
        {
            compRef = DotNetObjectReference.Create(this);
            await SidebarModule.InvokeVoidAsync("InitHandler", compRef);
        }
    }

    void ToggleSidebar()
    {
        ToggleState = ToggleState == "nav-active" ? "" : "nav-active";
    }

    [JSInvokable]
    public void HideSidebar()
    {
        if (ToggleState == "nav-active")
        {
            ToggleState = "";
            StateHasChanged();
        }
    }

    public void Dispose()
    {
        compRef?.Dispose();
    }
}